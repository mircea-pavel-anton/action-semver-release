---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release
permissions: { contents: read }

on:
  schedule: [{cron: '0 0 * * *'}] # wet run
  push:
    paths:
      - action.yml
      - .github/workflows/release.yaml
  workflow_dispatch:
    inputs:
      version-increment:
        description: 'Version increment type'
        required: false
        default: 'auto'
        type: choice
        options: [ "auto", "major", "minor", "patch", "prerelease" ]
      dry-run:
        description: 'Dry run mode (no actual release)'
        required: false
        default: false
        type: boolean
      draft:
        description: Mark Release as Draft
        default: false
        required: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    if: github.repository_owner == 'mirceanton' # ? don't run on forks
    runs-on: ubuntu-latest
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0  # !important for SVU to determine the next version number

      - name: Create Release
        id: release
        uses: ./
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          dry-run: ${{ (github.event_name == 'workflow_dispatch' && inputs.dry-run) || github.event_name == 'push' }}
          draft: ${{ inputs.draft || 'false' }}
          version-increment: ${{ inputs.version-increment || 'auto' }}

      - name: Check outputs
        run: |
          echo "Old version: ${{ steps.release.outputs.old_version }}"
          echo "Next version: ${{ steps.release.outputs.next_version }}"

          echo "Commits count: ${{ steps.release.outputs.commit_count }}"
          echo "Breaking commits: ${{ steps.release.outputs.breaking_count }}"
          echo "Feature commits: ${{ steps.release.outputs.feature_count }}"
          echo "Fix commits: ${{ steps.release.outputs.fix_count }}"

          echo "Release URL: ${{ steps.release.outputs.release_url }}"
